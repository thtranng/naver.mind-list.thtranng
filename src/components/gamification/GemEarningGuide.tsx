import React from 'react';
import { Gem, Calendar, TrendingUp, Users, Trophy, Gift, Star, Zap } from 'lucide-react';
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Badge } from '@/components/ui/badge';
import { GEM_RULES } from '@/services/gemSystem';

interface GemEarningMethod {
  icon: React.ReactNode;
  title: string;
  description: string;
  amount: number;
  frequency: string;
  color: string;
  category: 'daily' | 'progress' | 'social' | 'special';
}

const gemEarningMethods: GemEarningMethod[] = [
  {
    icon: <Calendar className="w-5 h-5" />,
    title: 'ƒêƒÉng nh·∫≠p h√†ng ng√†y',
    description: 'ƒêƒÉng nh·∫≠p v√†o ·ª©ng d·ª•ng m·ªói ng√†y',
    amount: GEM_RULES.DAILY_LOGIN,
    frequency: 'H√†ng ng√†y',
    color: 'bg-blue-500',
    category: 'daily'
  },
  {
    icon: <TrendingUp className="w-5 h-5" />,
    title: 'L√™n c·∫•p',
    description: 'ƒê·∫°t ƒë·ªß XP ƒë·ªÉ l√™n c·∫•p ƒë·ªô m·ªõi',
    amount: GEM_RULES.LEVEL_UP_BASE,
    frequency: 'Khi l√™n c·∫•p',
    color: 'bg-purple-500',
    category: 'progress'
  },
  {
    icon: <Zap className="w-5 h-5" />,
    title: 'Chu·ªói 7 ng√†y',
    description: 'Duy tr√¨ streak ƒëƒÉng nh·∫≠p 7 ng√†y li√™n ti·∫øp',
    amount: GEM_RULES.STREAK_7_DAYS,
    frequency: 'M·ªói 7 ng√†y',
    color: 'bg-orange-500',
    category: 'daily'
  },
  {
    icon: <Users className="w-5 h-5" />,
    title: 'Gi·ªõi thi·ªáu b·∫°n b√®',
    description: 'M·ªùi b·∫°n b√® tham gia s·ª≠ d·ª•ng ·ª©ng d·ª•ng',
    amount: GEM_RULES.REFERRAL,
    frequency: 'M·ªói l·ªùi m·ªùi',
    color: 'bg-green-500',
    category: 'social'
  },
  {
    icon: <Trophy className="w-5 h-5" />,
    title: 'Top 3 gi·∫£i ƒë·∫•u',
    description: 'ƒê·∫°t v·ªã tr√≠ top 3 trong gi·∫£i ƒë·∫•u tu·∫ßn',
    amount: GEM_RULES.TOURNAMENT_TOP3,
    frequency: 'H√†ng tu·∫ßn',
    color: 'bg-yellow-500',
    category: 'special'
  },
  {
    icon: <Gift className="w-5 h-5" />,
    title: 'H·ªôp b√≠ ·∫©n',
    description: 'M·ªü c√°c h·ªôp qu√† b√≠ ·∫©n trong game',
    amount: GEM_RULES.MYSTERY_BOX,
    frequency: 'Ng·∫´u nhi√™n',
    color: 'bg-pink-500',
    category: 'special'
  },
  {
    icon: <Star className="w-5 h-5" />,
    title: 'Ho√†n th√†nh th√†nh t√≠ch',
    description: 'ƒê·∫°t ƒë∆∞·ª£c c√°c m·ªëc th√†nh t√≠ch ƒë·∫∑c bi·ªát',
    amount: GEM_RULES.ACHIEVEMENT_MEDIUM,
    frequency: 'Khi ƒë·∫°t ƒë∆∞·ª£c',
    color: 'bg-indigo-500',
    category: 'progress'
  }
];

const categoryLabels = {
  daily: 'H√†ng ng√†y',
  progress: 'Ti·∫øn ƒë·ªô',
  social: 'X√£ h·ªôi',
  special: 'ƒê·∫∑c bi·ªát'
};

const categoryColors = {
  daily: 'bg-blue-100 text-blue-800',
  progress: 'bg-purple-100 text-purple-800',
  social: 'bg-green-100 text-green-800',
  special: 'bg-yellow-100 text-yellow-800'
};

export function GemEarningGuide() {
  const groupedMethods = gemEarningMethods.reduce((acc, method) => {
    if (!acc[method.category]) {
      acc[method.category] = [];
    }
    acc[method.category].push(method);
    return acc;
  }, {} as Record<string, GemEarningMethod[]>);

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Gem className="w-6 h-6 text-blue-500" />
          C√°ch ki·∫øm Mind Gems üíé
        </CardTitle>
        <CardDescription>
          Kh√°m ph√° c√°c c√°ch ƒë·ªÉ ki·∫øm Mind Gems v√† mua s·∫Øm trong Shop
        </CardDescription>
      </CardHeader>
      <CardContent className="space-y-6">
        {Object.entries(groupedMethods).map(([category, methods]) => (
          <div key={category} className="space-y-3">
            <div className="flex items-center gap-2">
              <Badge className={categoryColors[category as keyof typeof categoryColors]}>
                {categoryLabels[category as keyof typeof categoryLabels]}
              </Badge>
            </div>
            
            <div className="grid gap-3">
              {methods.map((method, index) => (
                <div 
                  key={index}
                  className="flex items-center justify-between p-4 bg-gray-50 rounded-lg border border-gray-200 hover:bg-gray-100 transition-colors"
                >
                  <div className="flex items-center gap-3">
                    <div className={`p-2 rounded-lg ${method.color} text-white`}>
                      {method.icon}
                    </div>
                    <div>
                      <h4 className="font-medium text-gray-900">{method.title}</h4>
                      <p className="text-sm text-gray-600">{method.description}</p>
                      <p className="text-xs text-gray-500 mt-1">{method.frequency}</p>
                    </div>
                  </div>
                  
                  <div className="text-right">
                    <div className="flex items-center gap-1 text-lg font-bold text-blue-600">
                      <span>+{method.amount}</span>
                      <Gem className="w-4 h-4" />
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        ))}
        
        {/* Tips Section */}
        <div className="mt-6 p-4 bg-blue-50 rounded-lg border border-blue-200">
          <h4 className="font-medium text-blue-900 mb-2 flex items-center gap-2">
            <Star className="w-4 h-4" />
            M·∫πo ƒë·ªÉ ki·∫øm nhi·ªÅu Gems h∆°n
          </h4>
          <ul className="text-sm text-blue-800 space-y-1">
            <li>‚Ä¢ ƒêƒÉng nh·∫≠p h√†ng ng√†y ƒë·ªÉ duy tr√¨ streak v√† nh·∫≠n bonus</li>
            <li>‚Ä¢ Ho√†n th√†nh nhi·ªÅu task ƒë·ªÉ ki·∫øm XP v√† l√™n c·∫•p nhanh h∆°n</li>
            <li>‚Ä¢ Tham gia gi·∫£i ƒë·∫•u ƒë·ªÉ c√≥ c∆° h·ªôi nh·∫≠n th∆∞·ªüng l·ªõn</li>
            <li>‚Ä¢ M·ªùi b·∫°n b√® tham gia ƒë·ªÉ nh·∫≠n bonus gi·ªõi thi·ªáu</li>
          </ul>
        </div>
      </CardContent>
    </Card>
  );
}